;
(function () {
	'use strict';
	angular
		.module('app', [
				'ui.router', 
				'ngMaterial', 
				'hmTouchEvents', 
				'ngSanitize', 
				'valdr'
			]);
})();
;
(function() {
	'use strict';
	angular
		.module('app')
		.config(router);

	router.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];

	function router($stateProvider, $urlRouterProvider, $locationProvider) {
		$locationProvider.html5Mode(true);
		$urlRouterProvider.otherwise('/');
		$stateProvider
			.state('root', {
				url: '/',
				templateUrl: '../public/client/app/components/landing-page/landing-page.template.html',
				controller: 'LandingPageController',
				controllerAs: 'landing'
			})
			.state('blog', {
				url: '/blog',
				templateUrl: '../public/client/app/components/blog/blog.template.html',
				controller: 'BlogController',
				controllerAs: 'blog'
			})
			.state('post', {
				url: '/blog/:id',
				templateUrl: '../public/client/app/components/post/post.template.html',
				controller: 'PostController',
				controllerAs: 'post'
			})
			.state('portfolio', {
				url: '/portfolio/:id',
				templateUrl: '../public/client/app/components/portfolio-item/portfolio-item.template.html',
				controller: 'PortfolioItemController',
				controllerAs: 'portfolioItem'
			})
			.state('contacts', {
				url: '/contacts',
				templateUrl: '../public/client/app/components/contacts-page/contacts-page.template.html',
				controller: 'ContactsPageController',
				controllerAs: 'contacts'
			});
	}
})();
;
(function () {
	'use strict';
	angular
		.module('app')
		.config(valdr);

	valdr.$inject = ['valdrProvider'];

	function valdr(valdrProvider) {
		valdrProvider.addConstraints({
			'Order': {
				'name': {
					'size': {
						'min': 2,
						'max': 20,
						'message': 'Нужно не менее 2 символов, но не более 20'
					},
					'pattern': {
						'value': '/^[+]{0,1}[а-яА-Я, a-zA-Z]{2,}$/',
						'message': 'Имя должно состоять из букв'
					},
					'required': {
						'message': 'Обязательное поле'
					}
				},
				'phone': {
					'size': {
						'min': 5,
						'max': 15,
						'message': 'Нужно не менее 5 символов, но не более 15.'
					},
					'pattern': {
						'value': '/^[+]{0,1}[-(),0-9]{5,}$/',
						'message': 'Сюда вводить буквы не надо'
					}
				},
				'email': {
					'email': {
						'message': 'Некорректный e-mail'
					},
					'required': {
						'message': 'Обязательное поле'
					}
				}
			}
		});
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.factory('lkMove', lkMove);

	function lkMove() {
		var body = angular.element(document.querySelector('body'));
		var html = angular.element(document.querySelector('html'));
		
		var service = {
			toTop: toTop,
			toTopWithAnimate: toTopWithAnimate,
			toBack: toBack
		};
		
		function toTop() {		
			body.scrollTop(0);
			html.scrollTop(0);
		}
		
		function toTopWithAnimate() {		
			body.animate({
				scrollTop: 0
			}, 800);
			html.animate({
				scrollTop: 0
			}, 800);
		}

		function toBack() {
			history.back();
		}
		
		return service;
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.factory('lkSeo', lkSeo);
		
	lkSeo.$inject = ['$rootScope', '$http', '$timeout'];

	function lkSeo($rootScope, $http, $timeout) {
		var path = '/getseo';
		var url = '';
		var params = '/';
		var data = [];
		var seoFactory = {
			getSeo: getSeo,
			title: '',
			description: '',
			keywords: '',
			image: ''
		};
			
		function getSeo() {
			$timeout(function(){
				url = document.location.href.split('/');
				url = url.slice(3, url.length);
				
				if(url.length === 1) {
					if(url[0] === '') {
						parseSeoData('/');
					} else {
						parseSeoData('/' + url[0] + '/');
					}
				} else {
					params = '/';
					for (var i = 0; i < url.length; i++) {
						params += url[i] + '/';
					}
					parseSeoData(params);
				}
			}, 0);	
		}
		
		function parseSeoData(param) {
			$http.get(path).success(function(response) {
				data = response;	
				for (var i = 0; i < data.length; i++) {
					if(data[i].url === param) {
						seoFactory.title = data[i].title;
						seoFactory.description = data[i].description;
						seoFactory.keywords = data[i].keywords;
						seoFactory.image = data[i].image;
					}
				}
				$rootScope.$emit('updateSEO');
			});	
		}
		return seoFactory;
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.factory('lkSocial', lkSocial);

	lkSocial.$inject = ['$window'];

	function lkSocial($window) {
		var service = {
			vk: function (purl, ptitle, pimg, text) {
				var url;
				url = 'http://vk.com/share.php?';
				url += 'url=' + encodeURIComponent(purl);
				url += '&title=' + encodeURIComponent(ptitle);
				url += '&description=' + encodeURIComponent(text);
				url += '&image=' + encodeURIComponent(pimg);
				url += '&noparse=true';
				this.popup(url);
			},
			ok: function (purl, text) {
				var url;
				url = 'http://www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1';
				url += '&st.comments=' + encodeURIComponent(text);
				url += '&st._surl=' + encodeURIComponent(purl);
				this.popup(url);
			},
			fb: function (purl, ptitle, pimg, text) {
				var url;
				url = 'http://www.facebook.com/sharer.php?s=100';
				url += '&p[title]=' + encodeURIComponent(ptitle);
				url += '&p[summary]=' + encodeURIComponent(text);
				url += '&p[url]=' + encodeURIComponent(purl);
				url += '&p[images][0]=' + encodeURIComponent(pimg);
				this.popup(url);
			},
			tw: function (purl, ptitle) {
				var url;
				url = 'http://twitter.com/share?';
				url += 'text=' + encodeURIComponent(ptitle);
				url += '&url=' + encodeURIComponent(purl);
				url += '&counturl=' + encodeURIComponent(purl);
				this.popup(url);
			},
			yt: function (purl) {
				var url;
				url = 'http://www.youtube.com/channel/';
				url += purl;
				window.open(url);
			},
			popup: function (url) {
				$window.open(url, '', 'toolbar=0,status=0,width=626,height=436,left=' + (screen.availWidth - 626) / 2 + ',top=' + (screen.availHeight - 436) / 2);
			}
		}
		
		return service;
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.factory('lkStore', lkStore);

	function lkStore() {
		var service = {
			cost: 0,
			project: '',
			services: []
		}

		return service;
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.directive('lkContainer', lkContainer);

	function lkContainer() {	
		var directive = {
			templateUrl: '../public/client/app/components/container/container.template.html',
			replace: true,
			restrict: 'E',
			controller: 'ContainerController',
			controllerAs: 'container'
		}
		
		return directive;
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.directive('lkFabButton', lkFabButton);

	function lkFabButton() {
		
		var directive = {
			templateUrl: '../public/client/app/components/fab-button/fab-button.template.html',
			replace: true,
			restrict: 'E',
			controller: 'FabButtonController',
			controllerAs: 'fabButton'
		}
		
		return directive;
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.directive('lkHeader', lkHeader);

	function lkHeader() {
		
		var directive = {
			templateUrl: '../public/client/app/components/header/header.template.html',
			replace: true,
			restrict: 'E',
			controller: 'HeaderController',
			controllerAs: 'header'
		};
		
		return directive;
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.directive('lkOrderForm', lkOrderForm);

	function lkOrderForm() {
		var directive = {
			templateUrl: '../public/client/app/components/order-form/order-form.template.html',
			replace: true,
			restrict: 'E',
			controller: 'OrdeFormController',
			controllerAs: 'orderForm'
		}

		return directive;
	}
}());
;
(function () {
	'use strict';

	angular
		.module('app')
		.directive('lkMadeWithLove', lkMadeWithLove);

	function lkMadeWithLove() {
		return {
			templateUrl: '../public/client/app/components/made-with-love/made-with-love.template.html',
			replace: true,
			restrict: 'E'
		}
	}
}());
;
(function () {
	'use strict';

	angular
		.module('app')
		.directive('lkSocialButtons', lkSocialButtons);

	function lkSocialButtons() {
		
		var directive = {
			templateUrl: '../public/client/app/components/social-buttons/social-buttons.template.html',
			replace: true,
			restrict: 'E',
			controller: 'SocialButtonsController',
			controllerAs: 'socialButtons'
		}
		return directive;
	}
})();
;
(function() {
	'use strict';
	angular
		.module('app')
		.controller('BlogController', BlogController);

	BlogController.$inject = ['$scope', '$http', '$window', 'lkSeo'];

	function BlogController($scope, $http, $window, lkSeo) {
		var blog = this;
		var cash = {};
		var last = 0;
		var delta = 3;
		var initial = 6;
		var path = '/getposts';
		var currentPosition = 0;
		var windowWrap = angular.element($window);

		var anchor = {
			node: angular.element(document.querySelector('#anchor')),
			position: 0
		}

		blog.cards = {};

		activate();

		function activate() {
			lkSeo.getSeo();
			
			$http.get(path).success(function(response) {
				cash = response;
				blog.cards = cash.slice(0, initial);
				last = delta;
			});
			$window.addEventListener('scroll', scrollHandler);
		}

		function loadMoreItems() {
			if (cash && (delta + last < cash.length)) {
				last = blog.cards.length;
				blog.cards = blog.cards.concat(cash.slice(last, last + delta));
			}
		}

		function scrollHandler() {
			currentPosition = windowWrap.scrollTop() + windowWrap.height();
			anchor.position = anchor.node.offset().top;

			if (currentPosition >= anchor.position) {
				$scope.$apply(loadMoreItems);
			}
		}
	}
})();
;
(function() {
	'use strict';

	angular
		.module('app')
		.controller('ContactsPageController', ContactsPageController);

	ContactsPageController.$inject = ['lkSeo'];

	function ContactsPageController(lkSeo) {
		var contacts = this;

		activate();

		function activate() {
			lkSeo.getSeo();
		}
	}
})();
;
(function() {
	'use strict';

	angular
		.module('app')
		.controller('ContainerController', ContainerController);

	ContainerController.$inject = ['$window'];

	function ContainerController($window) {
		var container = this;
		container.loadComplete = false;

		activate();

		function activate() {
			$window.onload = ready();
		}

		function ready() {
			container.loadComplete = true;
		}
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.controller('FabButtonController', FabButtonController);

	FabButtonController.$inject = ['lkMove'];

	function FabButtonController(lkMove) {
		var fabButton = this;

		fabButton.isOpen = false;
		fabButton.selectedMode = 'md-fling';
		fabButton.selectedDirection = 'up';
		fabButton.hover = false;

		fabButton.toTopWithAnimate = lkMove.toTopWithAnimate;
		fabButton.toBack = lkMove.toBack;
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.controller('HeaderController', HeaderController);

	HeaderController.$inject = ['$scope', '$mdSidenav', '$mdDialog'];

	function HeaderController($scope, $mdSidenav, $mdDialog) {
		var header = this;
		var menuId = 'menu';
		var parent = angular.element(document.querySelector('body'));

		header.toggle = toggle;	
		header.isOpen = isOpen;	
		header.showDialog = showDialog;
		
		function isOpen() {
			$mdSidenav(menuId).isOpen();
		}

		function toggle() {
			$mdSidenav(menuId).toggle();
		}

		function showDialog(event) {
			$mdDialog.show({
				templateUrl: '../public/client/app/components/dialogs/phone-dialog/phone-dialog.template.html',
				parent: parent,
				targetEvent: event,
				clickOutsideToClose: true,
				controller: 'PhoneDialogController',
				controllerAs: 'phoneDialog'
			});
		}
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.controller('LandingPageController', LandingPageController);

	LandingPageController.$inject = ['$http', 'lkSeo'];

	function LandingPageController($http, lkSeo) {
		var landing = this;
		var anchor = angular.element(document.querySelector('#scroll-here'));
		var body = angular.element(document.querySelector('body'));
		var html = angular.element(document.querySelector('html'));
		var pathToprtfolio = '/getportfolio';

		landing.portfolio = {};
		landing.scrollTo = scrollTo;
		
		activate();

		function activate() {
			lkSeo.getSeo();
			
			$http.get(pathToprtfolio).success(function (response) {
				landing.portfolio = response;
			});
		}
		
		function scrollTo() {
			body.animate({
				scrollTop: (anchor.offset().top - 50)
			}, 500);
			html.animate({
				scrollTop: (anchor.offset().top - 50)
			}, 500);
		}
	}
})();
;
(function () {
	'use strict';
	angular
		.module('app')
		.controller('OrdeFormController', OrdeFormController);

	OrdeFormController.$inject = ['$http', '$mdDialog', 'lkStore'];

	function OrdeFormController($http, $mdDialog, lkStore) {
		var orderForm = this;
		var path = '/getprices';
		var parent = angular.element(document.querySelector('body'));

		orderForm.projects = [];
		orderForm.services = [];
		orderForm.cost = 0;
		orderForm.calculate = calculate;
		orderForm.showDialog = showDialog;

		activate();

		function activate() {
			$http.get(path).success(function (response) {
				var j = 0;
				var k = 0;
				for (var i = 0; i < response.length; i++) {
					if (response[i].type === 'сайт') {
						orderForm.projects[j] = response[i];
						j++;
					}
					if (response[i].type === 'услуга') {
						orderForm.services[k] = response[i];
						k++;
					}
				}
			});
		}

		function calculate() {
			orderForm.cost = 0;

			if (orderForm.select) {
				orderForm.cost += orderForm.projects[orderForm.select].price;

				lkStore.project = orderForm.projects[orderForm.select].name;
			}

			for (var i = 0; i < orderForm.services.length; i++) {
				if (orderForm.services[i].checked) {
					orderForm.cost += orderForm.services[i].price;

					if (lkStore.services.length === 0) {
						lkStore.services.push(orderForm.services[i].name);
					}

					if (filter(lkStore.services, orderForm.services[i].name)) {
						lkStore.services.push(orderForm.services[i].name);
					}
				} else {
					for (var j = 0; j < lkStore.services.length; j++) {
						if (lkStore.services[j] === orderForm.services[i].name) {
							lkStore.services.splice(j, 1);
						}
					}
				}
			}

			lkStore.cost = orderForm.cost;
		}

		function filter(array, row) {
			var sum = 0;
			for (var i = 0; i < array.length; i++) {
				sum += array[i].indexOf(row) + 1;
			}
			if (sum === 0) {
				return true;
			} else {
				return false;
			}
		}

		function showDialog(event) {
			$mdDialog.show({
				templateUrl: '../public/client/app/components/dialogs/order-dialog/order-dialog.template.html',
				parent: parent,
				targetEvent: event,
				clickOutsideToClose: true,
				controller: 'OrderDialogController',
				controllerAs: 'orderDialog'
			});
		}
	}
}());
;
(function () {
	'use strict';

	angular
		.module('app')
		.controller('SeoController', SeoController);

	SeoController.$inject = ['$rootScope', '$http', 'lkSeo'];

	function SeoController($rootScope, $http, lkSeo) {
		var seo = this;
		
		seo.title = '';
		seo.description = '';
		seo.keywords = '';
		seo.image = '';
		
		activate();
		
		function activate() {
			$rootScope.$on('updateSEO', function (event, data) {
				seo.title = lkSeo.title;
				seo.description = lkSeo.description;
				seo.keywords = lkSeo.keywords;
				seo.image = lkSeo.image;
			});
		}
	}
})();
;
(function () {
	'use strict';
	angular
		.module('app')
		.controller('PortfolioItemController', PortfolioItemController);

	PortfolioItemController.$inject = ['$http', '$stateParams', 'lkMove'];

	function PortfolioItemController($http, $stateParams, lkMove) {
		var portfolioItem = this;
		var id = $stateParams.id;
		var	path = '/getportfolio/' + id;

		activate();
		
		function activate() {
			lkMove.toTop();
			
			$http.get(path).success(function (response) {
				portfolioItem.item = response;
			});
		}
	}
}());
;
(function () {
	'use strict';

	angular
		.module('app')
		.controller('PostController', PostController);

	PostController.$inject = ['$http', '$stateParams', 'lkMove', 'lkSeo'];

	function PostController($http, $stateParams, lkMove, lkSeo) {
		var post = this;
		var id = $stateParams.id;
		var path = '/getpost/' + id;
		
		activate();
	
		function activate() {
			lkSeo.getSeo();		
			lkMove.toTop();		
			$http.get(path).success(function (response) {
				post.item = response;
			});
		}
	}
}());
;
(function () {
	'use strict';

	angular
		.module('app')
		.controller('SocialButtonsController', SocialButtonsController);

	SocialButtonsController.$inject = ['lkSocial'];

	function SocialButtonsController(lkSocial) {
		var socialButtons = this;
		var site = 'http://likearts.ru';
		var title = 'LIKEARTS';
		var	image = 'http://likearts.ru/public/client/img/social.png';
		var	description = 'Likearts: только качественные сайты, потому что репутация решает.';

		var youtubeChanel = 'UCaTkpm1PUpe9pPLcDbzQp1A';
		var subscribe = '?sub_confirmation=1';

		socialButtons.vk = vk;
		socialButtons.yt = yt;
		socialButtons.fb = fb;
		socialButtons.tw = tw;

		function vk() {
			lkSocial.vk(site, title, image, description);
		}

		function ok() {
			lkSocial.ok(site, description);
		}

		function yt() {
			lkSocial.yt(youtubeChanel + subscribe);
		}

		function fb() {
			lkSocial.fb(site, title, image, description);
		}

		function tw() {
			lkSocial.tw(site, title);
		}
	}
})();
;
(function () {

	'use strict';

	angular
		.module('app')
		.controller('OrderDialogController', OrderDialogController);

	OrderDialogController.$inject = ['$http', '$sanitize', '$mdDialog', '$mdToast', 'lkStore'];

	function OrderDialogController($http, $sanitize, $mdDialog, $mdToast, lkStore) {
		var orderDialog = this;	
		var toast = angular.element(document.querySelector('#toast'));
		
		orderDialog.data = {
				name: null,
				phone: null,
				email: null,
				cost: null,
				project: null,
				services: null
			};

		orderDialog.send = send;
		orderDialog.cancel = cancel;
		
		function send() {
			orderDialog.data.name = $sanitize(orderDialog.data.name);
			orderDialog.data.phone = $sanitize(orderDialog.data.phone);
			orderDialog.data.email = $sanitize(orderDialog.data.email);
			orderDialog.data.cost = lkStore.cost ? lkStore.cost : 'Не заполнено';
			orderDialog.data.project = lkStore.project ? lkStore.project : 'Не заполнено';
			orderDialog.data.services = lkStore.services.length > 0 ? lkStore.services : 'Не заполнено';
			orderDialog.data = JSON.stringify(orderDialog.data);
			$http.post('/order', orderDialog.data).success(function (response) {
				$mdToast.show(
					$mdToast.simple()
					.textContent('Ваш заказ отправлен! Спасибо!')
					.position('bottom left')
					.hideDelay(5000)
					.parent(toast)
				);
				cancel();
			});
		}
		
		function cancel(){
			$mdDialog.cancel();
		}
	}
})();
;
(function () {
	'use strict';

	angular
		.module('app')
		.controller('PhoneDialogController', PhoneDialogController);

	PhoneDialogController.$inject = ['$http', '$sanitize', '$mdDialog', '$mdToast'];

	function PhoneDialogController($http, $sanitize, $mdDialog, $mdToast) {
		var phoneDialog = this;
		var toast = angular.element(document.querySelector('#toast'));
		var toastText = 'Ок! Мы вам перезвоним!';

		phoneDialog.data = {
			name: null,
			phone: null
		};

		phoneDialog.send = send;
		phoneDialog.cancel = cancel;

		function send() {
			phoneDialog.data.name = $sanitize(phoneDialog.data.name);
			phoneDialog.data.phone = $sanitize(phoneDialog.data.phone);
			phoneDialog.data = JSON.stringify(phoneDialog.data);
			console.log(phoneDialog.data);
			$http.post('/phone', phoneDialog.data).success(function (response) {
				$mdToast.show(
					$mdToast.simple()
					.textContent(toastText)
					.position('bottom left')
					.hideDelay(5000)
					.parent(toast)
				);

				cancel();
			});
		}

		function cancel() {
			$mdDialog.cancel();
		}
	}
})();